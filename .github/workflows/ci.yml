name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Install git
        run: |
          sudo apt-get update
          sudo apt-get install -y git
      - name: Download Dependencies
        working-directory: backend
        run: go mod download
      - name: Unit Tests
        working-directory: backend
        run: |
          go test -race -v $(go list ./... | grep -v integration)
      - name: Lint
        uses: golangci/golangci-lint-action@v4
        with:
          working-directory: backend
          args: --config=.golangci.yml
      - name: Security Scan
        uses: securego/gosec@master
        with:
          args: ./backend/...

  integration:
    needs: test
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Run Integration Tests
        working-directory: backend
        run: docker compose -f docker-compose.test.yml up --build --exit-code-from integration-tests
